<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using System;
using System.Activities;
using System.Threading.Tasks;

namespace Cogito.Activities
{

    public static partial class Activities
    {

<#
for (int i = 1; i <= 8; i++)
{
#>
        public static AsyncActionActivity<<#= Repeat("TArg{0}", i, ", ") #>> Action<<#= Repeat("TArg{0}", i, ", ") #>>(Func<<#= Repeat("TArg{0}", i, ", ") #>, Task> func, <#= Repeat("InArgument<TArg{0}> arg{0}", i, ", ") #>)
        {
            return new AsyncActionActivity<<#= Repeat("TArg{0}", i, ", ") #>>((context, <#= Repeat("_arg{0}", i, ", ") #>) => func(<#= Repeat("_arg{0}", i, ", ") #>), <#= Repeat("arg{0}", i, ", ") #>);
        }

        public static AsyncActionActivity<<#= Repeat("TArg{0}", i, ", ") #>> Action<<#= Repeat("TArg{0}", i, ", ") #>>(Func<<#= Repeat("TArg{0}", i, ", ") #>, Task> func, <#= Repeat("DelegateInArgument<TArg{0}> arg{0}", i, ", ") #>)
        {
            return new AsyncActionActivity<<#= Repeat("TArg{0}", i, ", ") #>>((context, <#= Repeat("_arg{0}", i, ", ") #>) => func(<#= Repeat("_arg{0}", i, ", ") #>), <#= Repeat("arg{0}", i, ", ") #>);
        }

        public static AsyncActionActivity<<#= Repeat("TArg{0}", i, ", ") #>> Action<<#= Repeat("TArg{0}", i, ", ") #>>(Func<<#= Repeat("TArg{0}", i, ", ") #>, Task> func, <#= Repeat("Activity<TArg{0}> arg{0}", i, ", ") #>)
        {
            return new AsyncActionActivity<<#= Repeat("TArg{0}", i, ", ") #>>((context, <#= Repeat("_arg{0}", i, ", ") #>) => func(<#= Repeat("_arg{0}", i, ", ") #>), <#= Repeat("arg{0}", i, ", ") #>);
        }

        public static AsyncActionActivity<<#= Repeat("TArg{0}", i, ", ") #>> Action<<#= Repeat("TArg{0}", i, ", ") #>>(<#= Repeat("InArgument<TArg{0}> arg{0}", i, ", ") #>, Func<<#= Repeat("TArg{0}", i, ", ") #>, Task> func)
        {
            return new AsyncActionActivity<<#= Repeat("TArg{0}", i, ", ") #>>((context, <#= Repeat("_arg{0}", i, ", ") #>) => func(<#= Repeat("_arg{0}", i, ", ") #>), <#= Repeat("arg{0}", i, ", ") #>);
        }

        public static AsyncActionActivity<<#= Repeat("TArg{0}", i, ", ") #>> Action<<#= Repeat("TArg{0}", i, ", ") #>>(<#= Repeat("DelegateInArgument<TArg{0}> arg{0}", i, ", ") #>, Func<<#= Repeat("TArg{0}", i, ", ") #>, Task> func)
        {
            return new AsyncActionActivity<<#= Repeat("TArg{0}", i, ", ") #>>((context, <#= Repeat("_arg{0}", i, ", ") #>) => func(<#= Repeat("_arg{0}", i, ", ") #>), <#= Repeat("arg{0}", i, ", ") #>);
        }

        public static AsyncActionActivity<<#= Repeat("TArg{0}", i, ", ") #>> Action<<#= Repeat("TArg{0}", i, ", ") #>>(<#= Repeat("Activity<TArg{0}> arg{0}", i, ", ") #>, Func<<#= Repeat("TArg{0}", i, ", ") #>, Task> func)
        {
            return new AsyncActionActivity<<#= Repeat("TArg{0}", i, ", ") #>>((context, <#= Repeat("_arg{0}", i, ", ") #>) => func(<#= Repeat("_arg{0}", i, ", ") #>), <#= Repeat("arg{0}", i, ", ") #>);
        }

        
        public static AsyncActionActivity<<#= Repeat("TArg{0}", i, ", ") #>> Action<<#= Repeat("TArg{0}", i, ", ") #>>(Func<ActivityContext, <#= Repeat("TArg{0}", i, ", ") #>, Task> func, <#= Repeat("InArgument<TArg{0}> arg{0}", i, ", ") #>)
        {
            return new AsyncActionActivity<<#= Repeat("TArg{0}", i, ", ") #>>(func, <#= Repeat("arg{0}", i, ", ") #>);
        }

        public static AsyncActionActivity<<#= Repeat("TArg{0}", i, ", ") #>> Action<<#= Repeat("TArg{0}", i, ", ") #>>(Func<ActivityContext, <#= Repeat("TArg{0}", i, ", ") #>, Task> func, <#= Repeat("DelegateInArgument<TArg{0}> arg{0}", i, ", ") #>)
        {
            return new AsyncActionActivity<<#= Repeat("TArg{0}", i, ", ") #>>(func, <#= Repeat("arg{0}", i, ", ") #>);
        }
        public static AsyncActionActivity<<#= Repeat("TArg{0}", i, ", ") #>> Action<<#= Repeat("TArg{0}", i, ", ") #>>(Func<ActivityContext, <#= Repeat("TArg{0}", i, ", ") #>, Task> func, <#= Repeat("Activity<TArg{0}> arg{0}", i, ", ") #>)
        {
            return new AsyncActionActivity<<#= Repeat("TArg{0}", i, ", ") #>>(func, <#= Repeat("arg{0}", i, ", ") #>);
        }

        public static AsyncActionActivity<<#= Repeat("TArg{0}", i, ", ") #>> Action<<#= Repeat("TArg{0}", i, ", ") #>>(<#= Repeat("InArgument<TArg{0}> arg{0}", i, ", ") #>, Func<ActivityContext, <#= Repeat("TArg{0}", i, ", ") #>, Task> func)
        {
            return new AsyncActionActivity<<#= Repeat("TArg{0}", i, ", ") #>>(func, <#= Repeat("arg{0}", i, ", ") #>);
        }

        public static AsyncActionActivity<<#= Repeat("TArg{0}", i, ", ") #>> Action<<#= Repeat("TArg{0}", i, ", ") #>>(<#= Repeat("DelegateInArgument<TArg{0}> arg{0}", i, ", ") #>, Func<ActivityContext, <#= Repeat("TArg{0}", i, ", ") #>, Task> func)
        {
            return new AsyncActionActivity<<#= Repeat("TArg{0}", i, ", ") #>>(func, <#= Repeat("arg{0}", i, ", ") #>);
        }

        public static AsyncActionActivity<<#= Repeat("TArg{0}", i, ", ") #>> Action<<#= Repeat("TArg{0}", i, ", ") #>>(<#= Repeat("Activity<TArg{0}> arg{0}", i, ", ") #>, Func<ActivityContext, <#= Repeat("TArg{0}", i, ", ") #>, Task> func)
        {
            return new AsyncActionActivity<<#= Repeat("TArg{0}", i, ", ") #>>(func, <#= Repeat("arg{0}", i, ", ") #>);
        }

<#
}
#>

    }

<#
for (int i = 1; i <= 8; i++)
{
#>

    /// <summary>
    /// Provides an <see cref="Activity"/> that executes the given asynchronous action with <#= i #> arguments.
    /// </summary>
    public class AsyncActionActivity<<#= Repeat("TArg{0}", i, ", ") #>> :
        AsyncTaskCodeActivity
    {

        /// <summary>
        /// Initializes a new instance.
        /// </summary>
        public AsyncActionActivity()
        {

        }

        /// <summary>
        /// Initializes a new instance.
        /// </summary>
        /// <param name="action"></param>
<#
    for (int j = 1; j <= i; j++)
    {
#>
        /// <param name="arg<#= j #>"></param>
<#
    }
#>
        public AsyncActionActivity(Func<ActivityContext, <#= Repeat("TArg{0}", i, ", ") #>, Task> action = null, <#= Repeat("InArgument<TArg{0}> arg{0} = null", i, ", ") #>)
        {
            Action = action;
<#
    for (int j = 1; j <= i; j++)
    {
#>
            Argument<#= j #> = arg<#= j #> ?? new InArgument<TArg<#= j #>>(default(TArg<#= j #>));
<#
    }
#>
        }

        /// <summary>
        /// Initializes a new instance.
        /// </summary>
        /// <param name="action"></param>
<#
    for (int j = 1; j <= i; j++)
    {
#>
        /// <param name="arg<#= j #>"></param>
<#
    }
#>
        public AsyncActionActivity(<#= Repeat("InArgument<TArg{0}> arg{0} = null", i, ", ") #>, Func<ActivityContext, <#= Repeat("TArg{0}", i, ", ") #>, Task> action = null)
        {
<#
    for (int j = 1; j <= i; j++)
    {
#>
            Argument<#= j #> = arg<#= j #> ?? new InArgument<TArg<#= j #>>(default(TArg<#= j #>));
<#
    }
#>
            Action = action;
        }

        /// <summary>
        /// Gets or sets the action to be invoked.
        /// </summary>
        [RequiredArgument]
        public Func<ActivityContext, <#= Repeat("TArg{0}", i, ", ") #>, Task> Action { get; set; }

<#
    for (int j = 1; j <= i; j++)
    {
#>
        /// <summary>
        /// Argument to send to action.
        /// </summary>
        [RequiredArgument]
        public InArgument<TArg<#= j #>> Argument<#= j #> { get; set; }

<#
    }
#>
        protected override Task ExecuteAsync(AsyncCodeActivityContext context)
        {
            return Action(context, <#= Repeat("context.GetValue(Argument{0})", i, ", ") #>);
        }

    }

<#
}
#>

}

<#+

string Repeat(string format, int count, string separator)
{
    return string.Join(separator, Enumerable.Range(1, count).Select(i => string.Format(format , i)));
}

#>